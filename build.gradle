plugins {
	id 'java'
	id 'com.github.johnrengelman.shadow' version '7.1.2'
}

group = 'de.stealwonders'
version = '2.0-SNAPSHOT'

repositories {
	mavenCentral()
	maven {
		name = 'papermc-repo'
		url = 'https://repo.papermc.io/repository/maven-public/'
	}
	maven {
		name = 'sonatype'
		url = 'https://oss.sonatype.org/content/groups/public/'
	}
}

dependencies {
	compileOnly 'io.papermc.paper:paper-api:1.19.3-R0.1-SNAPSHOT'

	implementation("cloud.commandframework:cloud-paper:1.8.0") {
		//exclude("org.checkerframework")
	}
	implementation("cloud.commandframework:cloud-annotations:1.8.0") {
		//exclude("org.checkerframework")
	}
	implementation("cloud.commandframework:cloud-minecraft-extras:1.8.0") {
		//exclude("org.checkerframework")
		//exclude("net.kyori")
	}
	implementation("dev.triumphteam:triumph-gui:3.1.4") {
		//exclude("net.kyori")
	}
}

def targetJavaVersion = 17
java {
	def javaVersion = JavaVersion.toVersion(targetJavaVersion)
	sourceCompatibility = javaVersion
	targetCompatibility = javaVersion
	if (JavaVersion.current() < javaVersion) {
		toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
	}
}

tasks.withType(JavaCompile).configureEach {
	if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
		options.release = targetJavaVersion
	}
}

shadowJar {
	relocate("cloud.commandframework", "de.stealwonders.shadow.cloud.commandframework")
}

processResources {
	def props = [version: version]
	inputs.properties props
	filteringCharset 'UTF-8'
	filesMatching('plugin.yml') {
		expand props
	}
}